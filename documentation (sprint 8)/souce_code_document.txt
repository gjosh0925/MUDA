The project was written in php, allowing us to use html and javascript for the front in userinterface things, and we can use php to grab data from the database and display the information that we want to display that is stored in the database. When diving further into this layout, inside of the MUDA directory folder, you will notice some folders and some files. All of the files directly in the MUDA directory are front in user interface files. Next, we have an includes folder that is used to store all of the backend files. Along with this folder, you have css, images, and js which are pretty self explanitory.

When diving further into the includes file, you will notice another folder called models. This folder is very crutial to how we are able to create objects in our code that are exactly like the database. Inside of the models folder there is a file for every table inside of our database. Inside of every file, there are getters and setters for each row in that table. This allows us to create an object in php that will go and grab the information from the database. If you ever have to create a new row, it is important to add this into the correct models file or else your code will not work. Inside the includes directory, you will see an async.php file. This file is used to make asyncronous calls to get database values and update a page without refreshing the page. Each function is a call that can be used to return data on the front end of the website. Next is the environment.php file. Located inside this file is how the code knows how to connect to the database and pull the right information. This is a file that is unique to you and that does not get pushed up to the github. The includes.php file is mainly just a file that includes all of the pages in one spot so that they can be referenced from any page and see the code they need to see. Lastly, we have a mysql.php file that is used to query the database and return the objects that you are grabbing from your query.

Now we are going to go over all of the front end files. There are two that we are going to talk about first, which are the header.php and the footer.php. The header and footer file include all of the necessary libraries to get the page to work properly, for example bootstrap, async, css files, etc. Instead of includes these in every file, it is much easier to just include the header and footer file and to keep them all in one place. It is also important to note that the header.php file includes the includes.php file. So by including the header file into your page, you now have access to all of the necessary libraries and to the model files which allow you to create an object in your code. The note here is that it is very important to include the header.php file at the top of the page and the footer.php file at the bottom of your page. Another thing that we store in the header page is our nav bar. This allows the nav bar to be on every page and look more fluent as a website. Any functions or blocks of code that you want to be used by every page, I suggest putting them in the header.php file. Every other file is just a normal php file containing html and css to get the page to look how you want it and may use some php to pull the appropriate data from the database.